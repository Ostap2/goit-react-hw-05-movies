{"version":3,"file":"static/js/115.c1cc3544.chunk.js","mappings":"8LAoEA,UA7DA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IACMC,EADY,IAAIC,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAI,SAExBL,IACFJ,EAAcI,GACdM,EAAaN,GAEhB,GAAE,IAEH,IAAMM,EAAe,SAACN,GACpBO,EAAAA,EAAAA,IAlBa,4CAmBI,CACbC,OAAQ,CACNC,QApBM,mCAqBNT,MAAOA,KAGVU,MAAK,SAACC,GACL,IAAMC,EAAUD,EAASE,KAAKD,QAC9Bd,EAAiBc,EAClB,IACAE,OAAM,SAACC,GACNC,QAAQD,MAAM,oKAAmCA,EAClD,IAGHb,OAAOe,QAAQC,UAAU,KAAM,GAA/B,wBAAoDC,mBAAmBnB,IACxE,EAOD,OACE,4BACE,2CACA,kBAAMoB,SARW,SAACC,GACpBA,EAAEC,iBACFhB,EAAaX,EACd,EAKG,WACE,kBACE4B,KAAK,OACLC,GAAG,cACHC,KAAK,cACLC,YAAY,kBACZC,MAAOhC,EACPiC,SAAU,SAACP,GAAD,OAAOzB,EAAcyB,EAAEQ,OAAOF,MAA9B,KAGZ,mBAAQJ,KAAK,SAASO,UAAU,gBAAhC,wBAIF,SAAC,IAAD,CAAYC,OAAQlC,MAGzB,C,oFChEYmC,EAAa,SAAC,GAAgB,IAAdD,EAAa,EAAbA,OACrB5B,GAAW8B,EAAAA,EAAAA,MAGjB,OACE,0BACE,eAAIH,UAAU,aAAd,SACGC,EAAOG,KAAI,SAACC,GAAD,OACV,eAAmBL,UAAU,aAA7B,UACE,UAAC,KAAD,CAAMM,GAAE,kBAAaD,EAAMX,IAAMa,MAAO,CAAEC,KAAMnC,GAAhD,WACE,gBACEoC,IACEJ,EAAMK,YAAN,0CAAuDL,EAAMK,aAV1D,8EAYLC,MAAO,IACPC,IAAI,WAELP,EAAMQ,UATFR,EAAMX,GADL,OAiBnB,C","sources":["components/Movies/Movies.jsx","components/MoviesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MoviesList } from '../MoviesList';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst API_KEY = '0faef55576804b8824855a6bbe4c2da0';\n\nfunction Movies() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const query = urlParams.get('query');\n\n    if (query) {\n      setSearchTerm(query);\n      handleSearch(query);\n    }\n  }, []);\n\n  const handleSearch = (query) => {\n    axios\n      .get(BASE_URL, {\n        params: {\n          api_key: API_KEY,\n          query: query,\n        },\n      })\n      .then((response) => {\n        const results = response.data.results;\n        setSearchResults(results);\n      })\n      .catch((error) => {\n        console.error('Помилка під час пошуку фільмів:', error);\n      });\n\n    // Оновлення URL без перезавантаження сторінки\n    window.history.pushState(null, '', `/movies?query=${encodeURIComponent(query)}`);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSearch(searchTerm);\n  };\n\n  return (\n    <div>\n      <h1>Search movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          id=\"searchInput\"\n          name=\"searchInput\"\n          placeholder=\"Enter a keyword\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n\n        <button type=\"submit\" className=\"button-search\">\n          Search\n        </button>\n      </form>\n      <MoviesList movies={searchResults} />\n    </div>\n  );\n}\n\nexport default Movies;\n","import { Link, useLocation } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      <ul className='list-films'>\n        {movies.map((movie) => (\n          <li key={movie.id} className='item-films'>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : defaultImg\n                }\n                width={250}\n                alt=\"poster\"\n              />  \n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"names":["useState","searchTerm","setSearchTerm","searchResults","setSearchResults","useEffect","query","URLSearchParams","window","location","search","get","handleSearch","axios","params","api_key","then","response","results","data","catch","error","console","history","pushState","encodeURIComponent","onSubmit","e","preventDefault","type","id","name","placeholder","value","onChange","target","className","movies","MoviesList","useLocation","map","movie","to","state","from","src","poster_path","width","alt","title"],"sourceRoot":""}